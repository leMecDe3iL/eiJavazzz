package jeux;

import java.lang.reflect.Field;
import java.util.ArrayList;
import java.util.List;

public class Context {

	// Champ

	private final List<Object> beans = new ArrayList<>();

	// MÃ©thodes auxiliaires

	public <T> T find(Class<T> clazz) {

		for (Object bean : beans) {
			if (clazz.isInstance(bean)) {
				return clazz.cast(bean);
			}
		}
		return null;

	}

	public <T> T create(Class<T> clazz) throws Exception {
	    return clazz.getDeclaredConstructor().newInstance();

	}

	public <T> void inject(T bean) throws Exception {
        Field beans = bean.getClass().getDeclaredField(Context.class);
		for (Field field : beans) {
			
		}
	}

	public <T> void start(T bean) throws Exception {

	}

	public <T> void stop(T bean) throws Exception {

	}

	// Actions

	public <T> T getBean(Class<T> clazz) {

		T objet = find(clazz);
		if (objet != null)
			return objet;

		try {
			objet = create(clazz);
			beans.add(objet);
			inject(objet);
			start(objet);
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
		return objet;
	}

	public void close() {
		try {
			for (var item : beans) {
				stop(item);
			}
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}

}
